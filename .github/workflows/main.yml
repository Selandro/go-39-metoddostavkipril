name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'
  workflow_dispatch: # Для ручного запуска

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.15

      - name: Build the application
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ./${{ env.PUBLIC_REGISTRY_APP_NAME }} ./
        env:
          PUBLIC_REGISTRY_APP_NAME: module-39

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.15

      - name: Run tests
        run: go test ./...

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.15

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.41.1
          golangci-lint --version

      - name: Run linter
        run: golangci-lint run
        continue-on-error: true  # Equivalent to 'allow_failure' in GitLab CI
        
    build_image_stable:
      runs-on: ubuntu-latest
      needs: build
      steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t "${{ secrets.DOCKER_HUB_USERNAME }}/module-39:${{ env.ref_name }}" .

      - name: Push Docker image
        run: docker push "${{ secrets.DOCKER_HUB_USERNAME }}/module-39:${{ env.ref_name }}"



  build_image_latest:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" -p "${{ secrets.DOCKER_HUB_PASSWORD }}" docker.io

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/module-39:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/module-39:latest
